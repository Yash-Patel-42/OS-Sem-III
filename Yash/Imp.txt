ls – Displays information about files in the current directory.
pwd – Displays the current working directory.
mkdir – Creates a directory.
cd – To navigate between different folders.
rmdir – Removes empty directories from the directory lists.
cp – Moves files from one directory to another.
mv – Rename and Replace the files
rm – Delete files 
uname – Command to get basic information about the OS
locate– Find a file in the database.
touch – Create empty files
ln – Create shortcuts to other files
cat – Display file contents on terminal
clear – Clear terminal 
ps- Display the processes in terminal
man – Access manual for all Linux commands
grep- Search for a specific string in an output
echo- Display active processes on the terminal
wget – download files from the internet
whoami- Create or update passwords for existing users
sort- sort the file content
cal- View Calendar in terminal
whereis – View the exact location of any command types after this command
df – Check the details of the file system
wc – Check the lines, word count, and characters in a file using different options 
sleep - to delay the output
uniq - filter out repeated names.
tr - uppercase to lowercase 
cat - print file content to terminal
grep --  grep [options] pattern [files]
        -c : This prints only a count of the lines that match a pattern
        -h : Display the matched lines, but do not display the filenames.
        -i : Ignores, case for matching
        -l : Displays list of a filenames only.
        -n : Display the matched lines and their line numbers.
        -v : This prints out all the lines that do not matches the pattern
        -e exp : Specifies expression with this option. Can use multiple times.
        -f file : Takes patterns from file, one per line.
        -E : Treats pattern as an extended regular expression (ERE)
        -w : Match whole word
        -o : Print only the matched parts of a matching line,
        with each such part on a separate output line.
        -A n : Prints searched line and nlines after the result.
        -B n : Prints searched line and n line before the result.
        -C n : Prints searched line and n lines after before the result.
nano hello.sh
chmod u+x Hello.sh : used if any error is there.
fi  :  it is used to close the if and else statement.

practical 2. shell scripting
(1) Demonstarte how to create and execute shell script.
(2) Demonstarte multiple ways of getting values from user.
(3) Write a shell script to demonstrate variable processing using "$" 
    sign for addition of two numbers.

$ : 

Do this in Terminal.  

a=10
echo $a

n="hello there"
echo $n

